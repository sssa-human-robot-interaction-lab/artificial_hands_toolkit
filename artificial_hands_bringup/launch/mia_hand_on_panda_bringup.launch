<?xml version="1.0"?>
<launch>

  <arg name="sim" default="true" />
  <arg name="Mia_COM" default='0' doc="Int number of the Mia hand COM port" />
  <arg name="Mia_fs" default='20' doc="Hz, frequency of the control loop of the Mia Hw interface" />
  <arg name="Mia_hw_sim" default="false" doc="set to true to simulate mia hand hardware interface (requires to emulate a serial port)" />  

  <!-- Load the path of the config file of the Mia trasnsmission -->
	<param name="mia_transmissions_config_" type="string" value="$(find mia_hand_description)/calibration/transmission_config.yaml" />

  <group if="$(arg sim)">

    <!-- Gazebo empty world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="paused" value="true"/>
      <arg name="gui" value="true"/>
      <arg name="use_sim_time" value="true"/>
    </include>

    <!-- Custom robot description -->
    <include file="$(find artificial_hands_bringup)/launch/inc/load_mia_hand_on_panda.launch.xml" />

    <!-- Gazebo robot config -->
    <arg name="arm_id"  default="panda" doc="Name of the panda robot to spawn" />
    <arg name="unpause" default="true" />
    <!-- <arg name="initial_joint_positions"  default="
                -J panda_joint1 0.89
                -J panda_joint2 0.52
                -J panda_joint3 1.60
                -J panda_joint4 -2.13
                -J panda_joint5 1.04
                -J panda_joint6 1.97
                -J panda_joint7 -1.48"/> -->
    <arg name="initial_joint_positions"
       doc="Initial joint configuration of the panda. Specify as a list of name/value pairs in form of '-J [name-of-joint] [value-in-rad]'. Default is a 90 degree bend in the elbow"
       default="-J $(arg arm_id)_joint1 0.5
                -J $(arg arm_id)_joint2 -0.5
                -J $(arg arm_id)_joint3 -1.79
                -J $(arg arm_id)_joint4 -2.26
                -J $(arg arm_id)_joint5 -0.66
                -J $(arg arm_id)_joint6 2.26
                -J $(arg arm_id)_joint7 0.05"
       />

  <!-- Spawn gazebo robot -->
  <node name="$(arg arm_id)_model_spawner"
        pkg="gazebo_ros"
        type="spawn_model"
        args="-param robot_description -urdf -model $(arg arm_id) -unpause
              $(arg initial_joint_positions)
              "/>

    <!-- Load panda controllers to parameter server -->
    <rosparam file="$(find artificial_hands_bringup)/config/control/panda_controllers.yaml" command="load"/>
    
    <!-- Spawn panda controllers -->
    <node name="panda_ctrl_spawner" pkg="controller_manager" type="spawner" output="screen" args="joint_state_controller" />
    <node name="panda_stopped_ctrl_spawner" pkg="controller_manager" type="spawner" output="screen" args="--stopped cartesian_motion_controller" />

    <!-- Robot state publisher -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <!-- Load Mia hand controllers to parameter server -->
    <rosparam file="$(find mia_hand_gazebo)/config/mia_hand_trajectory_controllers.yaml" command="load"/>
    <rosparam file="$(find mia_hand_gazebo)/config/gazebo_pid_thumb_opp.yaml" command="load"/>
    <rosparam file="$(find artificial_hands_bringup)/config/control/mia_hand_controllers.yaml" command="load"/>

    <!-- Spawn Mia hand controllers -->
    <node name="mia_hand_trajectory_ctrl_spawner" pkg="controller_manager" type="spawner" output="screen" args="mia_hand_vel_trajectory_controller" />

    <!-- Spawn Mia hand stopped controllers -->
    <node name="mia_hand_stopped_ctrl_spawner" pkg="controller_manager" type="spawner" output="screen" args="--stopped mia_hand_joint_group_vel_controller" />

    <!-- Remap mia hand joints for rviz -->
    <node name="remap_mia_joint_states" pkg="mia_hand_description" type="remap_mia_joint_states">
       <param name="remap_MIA_th_opp" type="bool" value="true"/>
    </node>

  </group>

  <!-- Load gui -->
  <node name="rqt_joint_trajectory_controller" pkg="rqt_joint_trajectory_controller" type="rqt_joint_trajectory_controller" />

</launch>