<?xml version="1.0"?>
<launch>

  <arg name="sim" default="true" />
  <arg name="robot_ip" default="192.168.1.3"/>
  
  <arg name="Mia_COM_" default='0' doc="Int number of the Mia hand COM port" />
  <arg name="Mia_fs_" default='20' doc="Hz, frequency of the control loop of the Mia Hw interface" />
  <arg name="Mia_hw_sim" default="false" doc="set to true to simulate mia hand hardware interface (requires to emulate a serial port)" />

  <group if="$(arg sim)">

    <!-- Make use of UR5 bringup from ur_gazebo-->
    <include file="$(find ur_gazebo)/launch/ur5_bringup.launch" >
      <arg name="robot_description_file" value="$(find artificial_hands_bringup)/launch/inc/load_mia_hand_on_ur5.launch.xml" />
    </include>

    <!-- Load Mia hand controllers to parameter server -->
    <rosparam file="$(find mia_hand_gazebo)/config/mia_hand_trajectory_controllers.yaml" command="load"/>
    <rosparam file="$(find mia_hand_gazebo)/config/gazebo_pid_thumb_opp.yaml" command="load"/>

    <!-- Spawn Mia hand controllers -->
    <node name="mia_hand_trajectory_ctrl_spawner" pkg="controller_manager" type="spawner" output="screen" args="mia_hand_vel_trajectory_controller" />

    <!-- Spawn Mia hand stopped controllers -->
    <node name="mia_hand_trajectory_stopped_ctrl_spawner" pkg="controller_manager" type="spawner" output="screen" args="--stopped mia_hand_pos_trajectory_controller" />
  
  </group>

  <group unless="$(arg sim)">

    <!-- Make use of UR5 bringup from ur_robot_driver-->
    <include file="$(find ur_robot_driver)/launch/ur5_bringup.launch" >
      <arg name="robot_ip" value="$(arg robot_ip)" />
      <arg name="kinematics_config" value="$(find artificial_hands_bringup)/config/kinematics_config_$(arg robot_ip).yaml" />
      <arg name="robot_description_file" value="$(find artificial_hands_bringup)/launch/inc/load_mia_hand_on_ur5.launch.xml" />
      <arg name="controllers" default="joint_state_controller pos_joint_traj_controller"/>
      <arg name="stopped_controllers" default="pose_based_cartesian_traj_controller"/>
    </include>

    <group ns="mia_hand">
      <!-- Start the control node -->
      <node name="Mia_hw_node" pkg="mia_hand_ros_control" type="Mia_hw_node" output="screen" >
        <param name="Mia_COM_" type="int" value="$(arg Mia_COM_)"/> <!-- private param so as to match to the namespace used-->
        <param name="Mia_fs_" type="int" value="$(arg Mia_fs_)"/> <!-- private param so as to match to the namespace used-->
      </node>

      <!-- Load joint controller configurations from YAML file to parameter server -->
      <rosparam file="$(find mia_hand_ros_control)/config/mia_hand_hw_controllers.yaml" command="load"/>
      <rosparam file="$(find mia_hand_ros_control)/config/mia_hand_hw_trajectory_controllers.yaml" command="load"/>
      <rosparam file="$(find artificial_hands_bringup)/config/control/mia_hand_controllers.yaml" command="load"/>

      <!-- Spawn Mia hand controllers -->
      <node name="mia_hand_trajectory_ctrl_spawner" pkg="controller_manager" type="spawner" output="screen" args="mia_hand_hw_vel_trajectory_controller" />
      
      <!-- Spawn Mia hand stopped controllers -->
      <node name="mia_hand_trajectory_stopped_ctrl_spawner" pkg="controller_manager" type="spawner" output="screen" args="--stopped mia_hand_joint_group_vel_controller" />

      <!-- Spawn Mia hand joint state controller -->
      <node name="mia_hand_joint_state_controller_spawner" pkg="controller_manager" type="spawner" output="screen"  args="joint_state_controller" />

      <!-- Load Mia hand robot state publisher -->
      <node unless="$(arg Mia_hw_sim)" name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" />

      <!-- Load node for remapping of the thumb opposition -->
      <node unless="$(arg Mia_hw_sim)" name="remap_mia_joint_states" pkg="mia_hand_description" type="remap_mia_joint_states"/>

    </group>

  </group>

  <!-- Load other cartesian controllers to parameter server -->
  <rosparam file="$(find artificial_hands_bringup)/config/control/cartesian_controllers.yaml" command="load"/>

  <!-- Spawn stopped cartesian controllers -->
  <node name="cartesian_ctrl_spawner" pkg="controller_manager" type="spawner" output="screen" args="--stopped cartesian_motion_controller" />

  <!-- Load gui -->
  <node name="rqt_joint_trajectory_controller" pkg="rqt_joint_trajectory_controller" type="rqt_joint_trajectory_controller" />

</launch>